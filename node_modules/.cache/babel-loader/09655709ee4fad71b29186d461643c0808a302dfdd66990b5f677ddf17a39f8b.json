{"ast":null,"code":"var _jsxFileName = \"/Users/jacobwernersen/Downloads/swipeable-squares-framework/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport NewsSquare from './components/NewsSquare';\nimport WeatherSquare from './components/WeatherSquare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [news, setNews] = useState([]);\n  const [weather, setWeather] = useState(null);\n\n  // Fetch news data\n  useEffect(() => {\n    fetch('https://api.allorigins.win/get?url=https://www.nrk.no/nyheter/siste.rss').then(response => response.json()).then(data => {\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(data.contents, 'text/xml');\n      const items = xmlDoc.getElementsByTagName('item');\n      const newsData = Array.from(items).slice(0, 6).map(item => {\n        var _item$getElementsByTa, _item$getElementsByTa2, _item$getElementsByTa3;\n        return {\n          title: ((_item$getElementsByTa = item.getElementsByTagName('title')[0]) === null || _item$getElementsByTa === void 0 ? void 0 : _item$getElementsByTa.textContent) || 'No title',\n          description: ((_item$getElementsByTa2 = item.getElementsByTagName('description')[0]) === null || _item$getElementsByTa2 === void 0 ? void 0 : _item$getElementsByTa2.textContent) || 'No description',\n          image: ((_item$getElementsByTa3 = item.getElementsByTagName('media:content')[0]) === null || _item$getElementsByTa3 === void 0 ? void 0 : _item$getElementsByTa3.getAttribute('url')) || 'https://via.placeholder.com/300'\n        };\n      });\n      setNews(newsData);\n    }).catch(err => console.error('Error fetching news:', err));\n  }, []);\n\n  // Fetch weather data\n  useEffect(() => {\n    const locationKey = \"59.91,10.75\"; // Example for Oslo (latitude, longitude)\n    const apiKey = \"YOUR_API_KEY\"; // Replace with your YR API key\n    fetch(`https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=${locationKey.split(\",\")[0]}&lon=${locationKey.split(\",\")[1]}`).then(response => response.json()).then(data => {\n      const now = new Date();\n      const hour = now.getHours();\n\n      // Choose an image based on the time of day\n      const image = hour < 12 ? '/morningphoto.jpg' : hour < 18 ? '/middayphoto.jpg' : '/eveningphoto.jpg';\n      const temperature = data.properties.timeseries[0].data.instant.details.air_temperature;\n      const feelsLike = data.properties.timeseries[0].data.instant.details.relative_humidity;\n      setWeather({\n        temperature,\n        feelsLike,\n        image\n      });\n    }).catch(err => console.error('Error fetching weather:', err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: /*#__PURE__*/_jsxDEV(Swiper, {\n        direction: \"vertical\",\n        className: \"swiper\",\n        children: [/*#__PURE__*/_jsxDEV(SwiperSlide, {\n          className: \"square\",\n          children: weather && /*#__PURE__*/_jsxDEV(WeatherSquare, {\n            temperature: weather.temperature,\n            feelsLike: weather.feelsLike,\n            image: weather.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), news.slice(0, 2).map((article, index) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          className: \"square\",\n          children: /*#__PURE__*/_jsxDEV(NewsSquare, {\n            title: article.title,\n            description: article.description,\n            image: article.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: /*#__PURE__*/_jsxDEV(Swiper, {\n        direction: \"vertical\",\n        className: \"swiper\",\n        children: news.slice(2, 6).map((article, index) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          className: \"square\",\n          children: /*#__PURE__*/_jsxDEV(NewsSquare, {\n            title: article.title,\n            description: article.description,\n            image: article.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"kDXc13iHEGucxltJaPJNnXOKzxA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Swiper","SwiperSlide","NewsSquare","WeatherSquare","jsxDEV","_jsxDEV","App","_s","news","setNews","weather","setWeather","fetch","then","response","json","data","parser","DOMParser","xmlDoc","parseFromString","contents","items","getElementsByTagName","newsData","Array","from","slice","map","item","_item$getElementsByTa","_item$getElementsByTa2","_item$getElementsByTa3","title","textContent","description","image","getAttribute","catch","err","console","error","locationKey","apiKey","split","now","Date","hour","getHours","temperature","properties","timeseries","instant","details","air_temperature","feelsLike","relative_humidity","className","children","direction","fileName","_jsxFileName","lineNumber","columnNumber","article","index","_c","$RefreshReg$"],"sources":["/Users/jacobwernersen/Downloads/swipeable-squares-framework/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport NewsSquare from './components/NewsSquare';\nimport WeatherSquare from './components/WeatherSquare';\n\nconst App = () => {\n  const [news, setNews] = useState([]);\n  const [weather, setWeather] = useState(null);\n\n  // Fetch news data\n  useEffect(() => {\n    fetch('https://api.allorigins.win/get?url=https://www.nrk.no/nyheter/siste.rss')\n      .then((response) => response.json())\n      .then((data) => {\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(data.contents, 'text/xml');\n        const items = xmlDoc.getElementsByTagName('item');\n\n        const newsData = Array.from(items).slice(0, 6).map((item) => ({\n          title: item.getElementsByTagName('title')[0]?.textContent || 'No title',\n          description: item.getElementsByTagName('description')[0]?.textContent || 'No description',\n          image:\n            item.getElementsByTagName('media:content')[0]?.getAttribute('url') ||\n            'https://via.placeholder.com/300',\n        }));\n\n        setNews(newsData);\n      })\n      .catch((err) => console.error('Error fetching news:', err));\n  }, []);\n\n  // Fetch weather data\n  useEffect(() => {\n    const locationKey = \"59.91,10.75\"; // Example for Oslo (latitude, longitude)\n    const apiKey = \"YOUR_API_KEY\"; // Replace with your YR API key\n    fetch(\n      `https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=${locationKey.split(\",\")[0]}&lon=${locationKey.split(\",\")[1]}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        const now = new Date();\n        const hour = now.getHours();\n\n        // Choose an image based on the time of day\n        const image =\n          hour < 12\n            ? '/morningphoto.jpg'\n            : hour < 18\n            ? '/middayphoto.jpg'\n            : '/eveningphoto.jpg';\n\n        const temperature = data.properties.timeseries[0].data.instant.details.air_temperature;\n        const feelsLike = data.properties.timeseries[0].data.instant.details.relative_humidity;\n\n        setWeather({\n          temperature,\n          feelsLike,\n          image,\n        });\n      })\n      .catch((err) => console.error('Error fetching weather:', err));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"column\">\n        <Swiper direction=\"vertical\" className=\"swiper\">\n          <SwiperSlide className=\"square\">\n            {weather && (\n              <WeatherSquare\n                temperature={weather.temperature}\n                feelsLike={weather.feelsLike}\n                image={weather.image}\n              />\n            )}\n          </SwiperSlide>\n          {news.slice(0, 2).map((article, index) => (\n            <SwiperSlide key={index} className=\"square\">\n              <NewsSquare\n                title={article.title}\n                description={article.description}\n                image={article.image}\n              />\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </div>\n      <div className=\"column\">\n        <Swiper direction=\"vertical\" className=\"swiper\">\n          {news.slice(2, 6).map((article, index) => (\n            <SwiperSlide key={index} className=\"square\">\n              <NewsSquare\n                title={article.title}\n                description={article.description}\n                image={article.image}\n              />\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}