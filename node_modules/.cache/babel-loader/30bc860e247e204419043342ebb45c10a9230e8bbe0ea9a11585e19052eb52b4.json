{"ast":null,"code":"var _jsxFileName = \"/Users/jacobwernersen/Downloads/swipeable-squares-framework/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NewsSquare from './components/NewsSquare';\nimport WeatherSquare from './components/WeatherSquare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [news, setNews] = useState([]);\n  const [weather, setWeather] = useState(null);\n\n  // Fetch the latest news\n  useEffect(() => {\n    fetch('https://api.allorigins.win/get?url=https://www.nrk.no/nyheter/siste.rss').then(response => response.json()).then(data => {\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(data.contents, 'text/xml');\n      const items = xmlDoc.getElementsByTagName('item');\n      const newsData = Array.from(items).slice(0, 2).map(item => {\n        var _item$getElementsByTa, _item$getElementsByTa2;\n        return {\n          title: (item === null || item === void 0 ? void 0 : (_item$getElementsByTa = item.getElementsByTagName('title')[0]) === null || _item$getElementsByTa === void 0 ? void 0 : _item$getElementsByTa.textContent) || 'No title',\n          image: (item === null || item === void 0 ? void 0 : (_item$getElementsByTa2 = item.getElementsByTagName('media:content')[0]) === null || _item$getElementsByTa2 === void 0 ? void 0 : _item$getElementsByTa2.getAttribute('url')) || 'https://via.placeholder.com/300'\n        };\n      });\n      setNews(newsData);\n    }).catch(err => console.error('Error fetching news:', err));\n  }, []);\n\n  // Fetch weather data\n  useEffect(() => {\n    const locationKey = \"59.91,10.75\"; // Example for Oslo (latitude, longitude)\n    const apiKey = \"YOUR_API_KEY\"; // Replace with your YR API key\n    fetch(`https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=${locationKey.split(\",\")[0]}&lon=${locationKey.split(\",\")[1]}`).then(response => response.json()).then(data => {\n      const now = new Date();\n      const hour = now.getHours();\n      const image = hour < 12 ? '/morningphoto.jpg' : hour < 18 ? '/middayphoto.jpg' : '/eveningphoto.jpg';\n      const temperature = data.properties.timeseries[0].data.instant.details.air_temperature;\n      const feelsLike = data.properties.timeseries[0].data.instant.details.relative_humidity;\n      setWeather({\n        temperature,\n        feelsLike,\n        image\n      });\n    }).catch(err => console.error('Error fetching weather:', err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: weather && /*#__PURE__*/_jsxDEV(WeatherSquare, {\n          temperature: weather.temperature,\n          feelsLike: weather.feelsLike,\n          image: weather.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column news-column\",\n        children: [news[0] && /*#__PURE__*/_jsxDEV(NewsSquare, {\n          title: news[0].title,\n          image: news[0].image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), news[1] && /*#__PURE__*/_jsxDEV(NewsSquare, {\n          title: news[1].title,\n          image: news[1].image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"kDXc13iHEGucxltJaPJNnXOKzxA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","NewsSquare","WeatherSquare","jsxDEV","_jsxDEV","App","_s","news","setNews","weather","setWeather","fetch","then","response","json","data","parser","DOMParser","xmlDoc","parseFromString","contents","items","getElementsByTagName","newsData","Array","from","slice","map","item","_item$getElementsByTa","_item$getElementsByTa2","title","textContent","image","getAttribute","catch","err","console","error","locationKey","apiKey","split","now","Date","hour","getHours","temperature","properties","timeseries","instant","details","air_temperature","feelsLike","relative_humidity","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jacobwernersen/Downloads/swipeable-squares-framework/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NewsSquare from './components/NewsSquare';\nimport WeatherSquare from './components/WeatherSquare';\n\nconst App = () => {\n    const [news, setNews] = useState([]);\n    const [weather, setWeather] = useState(null);\n\n    // Fetch the latest news\n    useEffect(() => {\n        fetch('https://api.allorigins.win/get?url=https://www.nrk.no/nyheter/siste.rss')\n            .then((response) => response.json())\n            .then((data) => {\n                const parser = new DOMParser();\n                const xmlDoc = parser.parseFromString(data.contents, 'text/xml');\n                const items = xmlDoc.getElementsByTagName('item');\n\n                const newsData = Array.from(items).slice(0, 2).map((item) => ({\n                    title: item?.getElementsByTagName('title')[0]?.textContent || 'No title',\n                    image:\n                        item?.getElementsByTagName('media:content')[0]?.getAttribute('url') ||\n                        'https://via.placeholder.com/300',\n                }));\n\n                setNews(newsData);\n            })\n            .catch((err) => console.error('Error fetching news:', err));\n    }, []);\n\n    // Fetch weather data\n    useEffect(() => {\n        const locationKey = \"59.91,10.75\"; // Example for Oslo (latitude, longitude)\n        const apiKey = \"YOUR_API_KEY\"; // Replace with your YR API key\n        fetch(\n            `https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=${locationKey.split(\",\")[0]}&lon=${locationKey.split(\",\")[1]}`\n        )\n            .then((response) => response.json())\n            .then((data) => {\n                const now = new Date();\n                const hour = now.getHours();\n\n                const image =\n                    hour < 12\n                        ? '/morningphoto.jpg'\n                        : hour < 18\n                        ? '/middayphoto.jpg'\n                        : '/eveningphoto.jpg';\n\n                const temperature = data.properties.timeseries[0].data.instant.details.air_temperature;\n                const feelsLike = data.properties.timeseries[0].data.instant.details.relative_humidity;\n\n                setWeather({\n                    temperature,\n                    feelsLike,\n                    image,\n                });\n            })\n            .catch((err) => console.error('Error fetching weather:', err));\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <div className=\"row\">\n                <div className=\"column\">\n                    {weather && (\n                        <WeatherSquare\n                            temperature={weather.temperature}\n                            feelsLike={weather.feelsLike}\n                            image={weather.image}\n                        />\n                    )}\n                </div>\n                <div className=\"column news-column\">\n                    {news[0] && (\n                        <NewsSquare title={news[0].title} image={news[0].image} />\n                    )}\n                    {news[1] && (\n                        <NewsSquare title={news[1].title} image={news[1].image} />\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}